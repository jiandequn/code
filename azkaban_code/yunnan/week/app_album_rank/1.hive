
----------------禁用次统计--------------------------------
set hive.exec.dynamic.partition=true;
set hive.exec.dynamic.partition.mode=nonstrict;
set hive.groupby.orderby.position.alias=true; -- 启用别名对于groupby和orderby
-- 计算 专辑播放情况 按周
create TEMPORARY table app_album_count_week_temp as
select user_type,parent_column_id,album_id,count(distinct user_id) as user_count,sum(1) as play_count,
sum(duration) as duration,
year(date_sub(next_day(concat(y,'-',m,'-',d),'MO'),4)) as y,weekofyear(concat(y,'-',m,'-',d)) as w
from app_album_play_log
where concat(y,'-',m,'-',d)>='${startDate}'
and concat(y,'-',m,'-',d)<'${endDate}' group by 1,2,3 cluster by parent_column_id,2;

-- 按天统计专辑播放用户数排行榜前20
insert overwrite table app_album_user_count_rank_week
select y, w,user_type,t.parent_column_id,t.album_id,a.album_name,a.content_type,act.content_type_name,t.user_count,rank,play_count,duration from(
select y,w,user_type,parent_column_id,album_id,user_count,play_count,duration,
dense_rank() OVER (partition by y,w,user_type,parent_column_id ORDER BY user_count desc) rank from app_album_count_week_temp)t
 left join album a on a.album_id=t.album_id
 left join album_content_type act on act.content_type=a.content_type
where t.rank<=20;

-- 按天统计专辑播放次数排行榜前20
insert overwrite table app_album_play_count_rank_week
select y, w,user_type,t.parent_column_id,t.album_id,a.album_name,a.content_type,act.content_type_name,t.play_count,rank,user_count,duration from(
select y, w,user_type,parent_column_id,album_id,play_count,user_count,duration,
dense_rank() OVER (partition by y,w,user_type,parent_column_id ORDER BY play_count desc) rank from app_album_count_week_temp)t
 left join album a on a.album_id=t.album_id
 left join album_content_type act on act.content_type=a.content_type
where t.rank<=20;



