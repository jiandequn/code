set hive.exec.dynamic.partition=true;
set hive.exec.dynamic.partition.mode=nonstrict;
set hive.groupby.orderby.position.alias=true; -- 启用别名对于groupby和orderby
set hive.vectorized.execution.enabled=false;
-- 需求 ：统计周期内，访问详情页的用户数和次数
--按日统计，详情页访问用户数和访问次数
insert overwrite table app_detail_page_count_day
select concat(y,'-',m,'-',d) as t_date,parent_column_id,user_type,count(distinct if(user_type='OTT',mac,user_id)) as user_count,count(1) as visit_count from events_type_log
 where events_type ='PAGE_ALBUM_DETAILS' and concat(y,'-',m,'-',d)<'${endDate}' and concat(y,'-',m,'-',d)>='${startDate}' and param['afterSpm']!='0' 
 group by 1,2,3;

-- 统计周期内，详情页访问用户数和访问次数
insert overwrite table app_detail_page_count
select concat(y,'-',m,'-',d) as t_date,parent_column_id,user_type,count(distinct if(user_type='OTT',mac,user_id)) as user_count,count(1) as visit_count from events_type_log
 where events_type ='PAGE_ALBUM_DETAILS' and concat(y,'-',m,'-',d)<'${endDate}' and param['afterSpm']!='0'
 group by 1,2,3;


 --按日统计，详情页专辑类型访问用户数，次数
insert overwrite table app_detail_page_album_content_type_count_day
 select t.t_date,t.parent_column_id,t.user_type,t.content_type,act.content_type_name,t.user_count,t.visit_count from(
  select t.t_date,t.parent_column_id,t.user_type,a.content_type,count(distinct user_id) as user_count,sum(visit_count) as visit_count from(
 select concat(y,'-',m,'-',d) as t_date,parent_column_id,user_type,param['contentId'] as album_id,if(user_type='OTT',mac,user_id) as user_id,count(1) as visit_count from events_type_log
 where events_type ='PAGE_ALBUM_DETAILS' and concat(y,'-',m,'-',d)<'${endDate}' and concat(y,'-',m,'-',d)>='${startDate}' and param['afterSpm']!='0' 
 group by 1,2,3,4,5) t
 inner join album a on a.album_id=t.album_id
 group by 1,2,3,4) t
 left join album_content_type act on act.content_type=t.content_type;
