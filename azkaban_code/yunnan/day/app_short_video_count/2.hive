set hive.exec.dynamic.partition=true;
set hive.exec.dynamic.partition.mode=nonstrict;
set hive.groupby.orderby.position.alias=true; -- 启用别名对于groupby和orderby
set hive.vectorized.execution.enabled=false;

--按日统计，短视频播放用户数，播放时长；点击播放专辑次数，播放时长；

--短视频小窗口播放时间，播放用户数
create TEMPORARY table short_video_duration_day_tmp as
select  concat(y,'-',m,'-',d) as t_date,parent_column_id,user_type,count(distinct user_id) as user_count,sum(param['timePosition']) as duration from events_type_log
 where events_type ='COLUMN_TYPE_SHORT_VIDEO_HISTORY_POINT' and concat(y,'-',m,'-',d)<'${endDate}' and concat(y,'-',m,'-',d)>='${startDate}'
 group by 1,2,3;

--列出播放了的短视频
create TEMPORARY table play_short_video_tmp as
 select parent_column_id,param['shortVideoId'] as short_video_id from events_type_log
 where events_type ='COLUMN_TYPE_SHORT_VIDEO_HISTORY_POINT' and concat(y,'-',m,'-',d)<'${endDate}' and concat(y,'-',m,'-',d)>='${startDate}'
 group by 1,2;


 --python处理 短视频和播放记录的关系
 select create_time,user_id,events_type, from events_type_log  where events_type not in('COLUMN_TYPE_HISTORY_POINT','ORDER','AUTH_PRODUCT','SHORT_VIDEO_AUTH_PRODUCT')
 union all
 select create_time,'COLUMN_TYPE_HISTORY_POINT' as events_type from app_album_play_log

  --把用户点击的短视频log存入临时表
 drop table if exists short_video_click_tmp;
 create TEMPORARY table short_video_click_tmp as
  select y,m,d,a.parent_column_id,a.param['columnId'] column_id,a.user_type,mac,sn,ca,user_id,b.short_video_id,param['nowSpm'] as now_spm,param['contentId'] as album_id,a.create_time
from events_type_log a
inner join t_column_management t on t.column_id=a.parent_column_id
inner join play_short_video_tmp b ON a.parent_column_id=b.parent_column_id and param['afterSpm'] rlike concat('^',a.parent_column_id,'\.',t.column_code,'\.[0-9]*\.',b.short_video_id,'\.[0-9]{13}$')
 where events_type ='PAGE_ALBUM_DETAILS'
  and concat(y,'-',m,'-',d)<'${endDate}' and concat(y,'-',m,'-',d)>='${startDate}';




  --统计各个短视频内容播放用户数，短视频播放时长，播放专辑次数，播放时长
 select  concat(y,'-',m,'-',d) as t_date,parent_column_id,user_type,param['shortVideoId'] as short_video_id,
 count(distinct user_id) as short_video_user_count,sum(param['timePosition']) as short_video_duration,0 as click_user_count,0 as click_play_count  from events_type_log
 where events_type ='COLUMN_TYPE_SHORT_VIDEO_HISTORY_POINT' and concat(y,'-',m,'-',d)<'${endDate}' and concat(y,'-',m,'-',d)>='${startDate}'
 group by 1,2,3,4
union all
select concat(y,'-',m,'-',d) as t_date,parent_column_id,user_type,short_video_id,0 as short_video_user_count,0 as short_video_duration,count(distinct user_id) as click_user_count,count(1) as click_play_count
from short_video_click_tmp group by 1,2,3,4






  select t_date,parent_column_id,user_type,
sum(small_win_user_count) as small_win_user_count,sum(click_user_count) click_user_count,sum(play_count) play_count,
 sum(small_win_duration) as small_win_duration
 from (
 select t_date,parent_column_id,user_type,user_count as small_win_user_count,0 click_user_count,0 as play_count,duartion as small_win_duration
  from short_video_duration_day_tmp
 union all
 select t_date,parent_column_id,user_type,0 as small_win_user_count,user_count as click_user_count,
 play_count,0 as small_win_duration from play_short_video_click_sum) a group by 1,2,3;



 create TEMPORARY table user_anysis_log as
select * from(
select parent_column_id,user_type,events_type,user_id,area_code,param,create_time from events_type_log where events_type not in('COLUMN_TYPE_HISTORY_POINT','AUTH_PRODUCT','SHORT_VIDEO_AUTH_PRODUCT') and concat(y,'-',m,'-',d)<'2021-04-05' and concat(y,'-',m,'-',d)>='2021-04-01'
union all 
select parent_column_id,user_type,'COLUMN_TYPE_HISTORY_POINT' as events_type,user_id,area_code,map('albumId',album_id,'videoId',video_id,'duration',duration,'directPlay',direct_play) as param,create_time 
from app_album_play_log  where concat(y,'-',m,'-',d)<'2021-04-05' and concat(y,'-',m,'-',d)>='2021-04-01') a order by parent_column_id,user_id,create_time